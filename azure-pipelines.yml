trigger:
  branches:
    include:
      - main
      - dev
  paths:
    include:
      - bmsdna.sql_utils

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  isDevTest: $[eq(variables['Build.SourceBranch'], 'refs/heads/dev')]
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    EnvName: "Production"
  ${{ else }}:
    EnvName: "None"

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
      - job: buildjob
        displayName: Build Python Env
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.10"
              addToPath: true
              architecture: "x64"

          - script: pip install poetry
            displayName: "Install Poetry"

          - script: poetry install --all-extras
            displayName: "Poetry install"
            workingDirectory: "bmsdna.sql_utils"

          - script: poetry run pyright
            displayName: "pyright: Type Checking"
            workingDirectory: "bmsdna.sql_utils"
          

          - script: |
              poetry build
            displayName: "Poetry build"
            workingDirectory: "bmsdna.sql_utils"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "bmsdna.sql_utils/dist"
              ArtifactName: "dist4index"
              publishLocation: "Container"

          - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
              - script: |
                  poetry config repositories.BMSDataHub_Upload https://pkgs.dev.azure.com/bmeurope/_packaging/BMS/pypi/upload/
                  poetry publish --repository BMSDataHub_Upload -p $(System.AccessToken) -u a
                displayName: "Publish it to Azure DevOps"
                workingDirectory: "bmsdna.sql_utils"